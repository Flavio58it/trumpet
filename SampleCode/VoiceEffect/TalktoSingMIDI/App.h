/*---------------------------------------------------------------------------------------------------------*/
/*                                                                                                         */
/* Copyright(c) Nuvoton Technology Corp. All rights reserved.                                              */
/*                                                                                                         */
/*---------------------------------------------------------------------------------------------------------*/
#ifndef __APP_H__
#define __APP_H__

#include "ConfigApp.h"
#include "Framework.h"

// -------------------------------------------------------------------------------------------------------------------------------
// g_u8AppCtrl Bit Field Definitions
// -------------------------------------------------------------------------------------------------------------------------------
#define APPCTRL_NO_ACTION			0
#define APPCTRL_PLAY				BIT0
#define APPCTRL_PLAY_STOP			BIT1
#define APPCTRL_RECORD				BIT2
#define APPCTRL_WRITE				BIT3

// -------------------------------------------------------------------------------------------------------------------------------
// Application Related Definitions 
// -------------------------------------------------------------------------------------------------------------------------------
#include "RecordApp/RecordApp.h"
#include "TalkToSingApp/TalkToSingApp.h"
#include "MidiExApp/MidiExApp.h"
#include "PlaybackRecord.h"
#include "BufCtrl.h"
#include "SpiFlashMap.h"
#include "ConfigIO.h"

#define APP_START_MELODY_ID			TALKTOSING_CHRISTMAS_P3
#define APP_END_MELODY_ID			TALKTOSING_TWINKLE_P5


typedef struct
{
	union 
	{
		S_RECORDAPP			sRecordApp;			// data buffer for record sound app.
		struct
		{
			S_TALKTOSINGAPP	sTalkToSingApp;		// data buffer for TalkToSing app
			S_MIDIEX_APP 	sMidiExApp;			// data buffer for midi synthesizer app.
		};
	};
	
	//----------------------------------------------------------------------------------------------------------
	// Changable variables for application
	S_TALKTOSINGAPP_PARAM	sTalkToSingParam;	// TalkToSing parameters
	BOOL					bEnableMusic;		// enable / disable music
	
	UINT16					u16LEDFlashing;		// flashing LED as recording
	UINT8					u8KeyPressingCnt;	// keypress counter
	
	//----------------------------------------------------------------------------------------------------------
#ifdef USE_AUDIOMIXER
	S_BUF_CTRL_CALLBACK sMixerCtrl;	
#endif
} S_APP;


// ------------------------------------------------------------------------------------------------------------------------------
// Initiate app.
// ------------------------------------------------------------------------------------------------------------------------------
void 
App_Initiate(void);

// ------------------------------------------------------------------------------------------------------------------------------
// Start playback TalkToSing sound and midi (background music)
// ------------------------------------------------------------------------------------------------------------------------------
BOOL 					// TRUE: success to start, FALSE: fail to start
App_StartPlay(void);

// ------------------------------------------------------------------------------------------------------------------------------
// Stop playback TalkToSing and Midi.
// ------------------------------------------------------------------------------------------------------------------------------
void 
App_StopPlay(void);

// ------------------------------------------------------------------------------------------------------------------------------
// Start record PCM samples to SPI-flash
// ------------------------------------------------------------------------------------------------------------------------------
void 
App_StartRec(void);

// ------------------------------------------------------------------------------------------------------------------------------
// Stop record PCM samples to SPI-flash.
// ------------------------------------------------------------------------------------------------------------------------------
void 
App_StopRec(void);

// ------------------------------------------------------------------------------------------------------------------------------
// Process to play TalkToSing sound and midi. Put samples into output buffers for mixing.
// ------------------------------------------------------------------------------------------------------------------------------
BOOL 					// TRUE: continue playback, FALSE: finish playback
App_ProcessPlay(void);

// ------------------------------------------------------------------------------------------------------------------------------
// Record PCM samples in input buffer to SPI-flash,
// ------------------------------------------------------------------------------------------------------------------------------
BOOL 					// TRUE: continue record, FALSE: finish record.
App_ProcessRec(void);

// ------------------------------------------------------------------------------------------------------------------------------
// Operation in main loop to record or playback.
// ------------------------------------------------------------------------------------------------------------------------------
void 
App_Process(void);


//-----------------------------------------------------------------------------------------------------------
// Start or stop record.
//-----------------------------------------------------------------------------------------------------------
void 
App_StartOrStopRecord(void);

//-----------------------------------------------------------------------------------------------------------
// Start or stop playback.
//-----------------------------------------------------------------------------------------------------------
void App_StartOrStopPlaySound(void);

//----------------------------------------------------------------------------------------------------
// Play next melody.
//----------------------------------------------------------------------------------------------------
void 
App_PlayNextMelody(void);

//----------------------------------------------------------------------------------------------------
// Enable / disable music.
//----------------------------------------------------------------------------------------------------
void 
App_ToggleMusic(void);

//----------------------------------------------------------------------------------------------------
// Switch TalkToSing modes.
//----------------------------------------------------------------------------------------------------
void 
App_SwitchTalkToSingMode(void);

//----------------------------------------------------------------------------------------------------
// Switch singing mode.
//----------------------------------------------------------------------------------------------------
void 
App_SwitchSingMode(void);

//-----------------------------------------------------------------------------------------------------------
// Flashing LED as recording.
//-----------------------------------------------------------------------------------------------------------
void 
App_RecordLEDFlashing(void);

//----------------------------------------------------------------------------------------------------
// Display LEDs.
//----------------------------------------------------------------------------------------------------
void 
ShowLeds(void);

// ------------------------------------------------------------------------------------------------------------------------------
// Operation for power-down request.
// ------------------------------------------------------------------------------------------------------------------------------
void 				
App_PowerDown(void);

#endif //#ifndef __APP_H__

